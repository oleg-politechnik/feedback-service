//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FeedbackServiceModel", "FK_Sites_Sites", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FeedbackService.Models.Client), "Sites", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FeedbackService.Models.Site), true)]
[assembly: EdmRelationshipAttribute("FeedbackServiceModel", "FK_Feedbacks_Estimations", "Estimations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FeedbackService.Models.Estimation), "Feedbacks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FeedbackService.Models.Feedback), true)]
[assembly: EdmRelationshipAttribute("FeedbackServiceModel", "FK_Feedbacks_Feedbacks", "Sites", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FeedbackService.Models.Site), "Feedbacks", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FeedbackService.Models.Feedback), true)]

#endregion

namespace FeedbackService.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FeedbackServiceEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FeedbackServiceEntities object using the connection string found in the 'FeedbackServiceEntities' section of the application configuration file.
        /// </summary>
        public FeedbackServiceEntities() : base("name=FeedbackServiceEntities", "FeedbackServiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FeedbackServiceEntities object.
        /// </summary>
        public FeedbackServiceEntities(string connectionString) : base(connectionString, "FeedbackServiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FeedbackServiceEntities object.
        /// </summary>
        public FeedbackServiceEntities(EntityConnection connection) : base(connection, "FeedbackServiceEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Estimation> Estimations
        {
            get
            {
                if ((_Estimations == null))
                {
                    _Estimations = base.CreateObjectSet<Estimation>("Estimations");
                }
                return _Estimations;
            }
        }
        private ObjectSet<Estimation> _Estimations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Feedback> Feedbacks
        {
            get
            {
                if ((_Feedbacks == null))
                {
                    _Feedbacks = base.CreateObjectSet<Feedback>("Feedbacks");
                }
                return _Feedbacks;
            }
        }
        private ObjectSet<Feedback> _Feedbacks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Site> Sites
        {
            get
            {
                if ((_Sites == null))
                {
                    _Sites = base.CreateObjectSet<Site>("Sites");
                }
                return _Sites;
            }
        }
        private ObjectSet<Site> _Sites;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Estimations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEstimations(Estimation estimation)
        {
            base.AddObject("Estimations", estimation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Feedbacks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedbacks(Feedback feedback)
        {
            base.AddObject("Feedbacks", feedback);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sites EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSites(Site site)
        {
            base.AddObject("Sites", site);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FeedbackServiceModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Client CreateClient(global::System.Guid clientId, global::System.String name)
        {
            Client client = new Client();
            client.ClientId = clientId;
            client.Name = name;
            return client;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    OnClientIdChanging(value);
                    ReportPropertyChanging("ClientId");
                    _ClientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientId");
                    OnClientIdChanged();
                }
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FeedbackServiceModel", "FK_Sites_Sites", "Sites")]
        public EntityCollection<Site> Sites
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Site>("FeedbackServiceModel.FK_Sites_Sites", "Sites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Site>("FeedbackServiceModel.FK_Sites_Sites", "Sites", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FeedbackServiceModel", Name="Estimation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Estimation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Estimation object.
        /// </summary>
        /// <param name="estimationLevel">Initial value of the EstimationLevel property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static Estimation CreateEstimation(global::System.Int32 estimationLevel, global::System.String title)
        {
            Estimation estimation = new Estimation();
            estimation.EstimationLevel = estimationLevel;
            estimation.Title = title;
            return estimation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimationLevel
        {
            get
            {
                return _EstimationLevel;
            }
            set
            {
                if (_EstimationLevel != value)
                {
                    OnEstimationLevelChanging(value);
                    ReportPropertyChanging("EstimationLevel");
                    _EstimationLevel = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EstimationLevel");
                    OnEstimationLevelChanged();
                }
            }
        }
        private global::System.Int32 _EstimationLevel;
        partial void OnEstimationLevelChanging(global::System.Int32 value);
        partial void OnEstimationLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FeedbackServiceModel", "FK_Feedbacks_Estimations", "Feedbacks")]
        public EntityCollection<Feedback> Feedbacks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feedback>("FeedbackServiceModel.FK_Feedbacks_Estimations", "Feedbacks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feedback>("FeedbackServiceModel.FK_Feedbacks_Estimations", "Feedbacks", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FeedbackServiceModel", Name="Feedback")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Feedback : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Feedback object.
        /// </summary>
        /// <param name="feedbackId">Initial value of the FeedbackId property.</param>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        /// <param name="estimationLevel">Initial value of the EstimationLevel property.</param>
        /// <param name="numRatesUp">Initial value of the NumRatesUp property.</param>
        /// <param name="numRatesDown">Initial value of the NumRatesDown property.</param>
        public static Feedback CreateFeedback(global::System.Guid feedbackId, global::System.Guid siteId, global::System.Int32 estimationLevel, global::System.Int32 numRatesUp, global::System.Int32 numRatesDown)
        {
            Feedback feedback = new Feedback();
            feedback.FeedbackId = feedbackId;
            feedback.SiteId = siteId;
            feedback.EstimationLevel = estimationLevel;
            feedback.NumRatesUp = numRatesUp;
            feedback.NumRatesDown = numRatesDown;
            return feedback;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FeedbackId
        {
            get
            {
                return _FeedbackId;
            }
            set
            {
                if (_FeedbackId != value)
                {
                    OnFeedbackIdChanging(value);
                    ReportPropertyChanging("FeedbackId");
                    _FeedbackId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FeedbackId");
                    OnFeedbackIdChanged();
                }
            }
        }
        private global::System.Guid _FeedbackId;
        partial void OnFeedbackIdChanging(global::System.Guid value);
        partial void OnFeedbackIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                OnSiteIdChanging(value);
                ReportPropertyChanging("SiteId");
                _SiteId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SiteId");
                OnSiteIdChanged();
            }
        }
        private global::System.Guid _SiteId;
        partial void OnSiteIdChanging(global::System.Guid value);
        partial void OnSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EstimationLevel
        {
            get
            {
                return _EstimationLevel;
            }
            set
            {
                OnEstimationLevelChanging(value);
                ReportPropertyChanging("EstimationLevel");
                _EstimationLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstimationLevel");
                OnEstimationLevelChanged();
            }
        }
        private global::System.Int32 _EstimationLevel;
        partial void OnEstimationLevelChanging(global::System.Int32 value);
        partial void OnEstimationLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumRatesUp
        {
            get
            {
                return _NumRatesUp;
            }
            set
            {
                OnNumRatesUpChanging(value);
                ReportPropertyChanging("NumRatesUp");
                _NumRatesUp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumRatesUp");
                OnNumRatesUpChanged();
            }
        }
        private global::System.Int32 _NumRatesUp;
        partial void OnNumRatesUpChanging(global::System.Int32 value);
        partial void OnNumRatesUpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumRatesDown
        {
            get
            {
                return _NumRatesDown;
            }
            set
            {
                OnNumRatesDownChanging(value);
                ReportPropertyChanging("NumRatesDown");
                _NumRatesDown = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumRatesDown");
                OnNumRatesDownChanged();
            }
        }
        private global::System.Int32 _NumRatesDown;
        partial void OnNumRatesDownChanging(global::System.Int32 value);
        partial void OnNumRatesDownChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FeedbackQuality
        {
            get
            {
                return _FeedbackQuality;
            }
            set
            {
                OnFeedbackQualityChanging(value);
                ReportPropertyChanging("FeedbackQuality");
                _FeedbackQuality = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FeedbackQuality");
                OnFeedbackQualityChanged();
            }
        }
        private Nullable<global::System.Int32> _FeedbackQuality;
        partial void OnFeedbackQualityChanging(Nullable<global::System.Int32> value);
        partial void OnFeedbackQualityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FeedbackServiceModel", "FK_Feedbacks_Estimations", "Estimations")]
        public Estimation Estimation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estimation>("FeedbackServiceModel.FK_Feedbacks_Estimations", "Estimations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estimation>("FeedbackServiceModel.FK_Feedbacks_Estimations", "Estimations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Estimation> EstimationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Estimation>("FeedbackServiceModel.FK_Feedbacks_Estimations", "Estimations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Estimation>("FeedbackServiceModel.FK_Feedbacks_Estimations", "Estimations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FeedbackServiceModel", "FK_Feedbacks_Feedbacks", "Sites")]
        public Site Site
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("FeedbackServiceModel.FK_Feedbacks_Feedbacks", "Sites").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("FeedbackServiceModel.FK_Feedbacks_Feedbacks", "Sites").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Site> SiteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Site>("FeedbackServiceModel.FK_Feedbacks_Feedbacks", "Sites");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Site>("FeedbackServiceModel.FK_Feedbacks_Feedbacks", "Sites", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FeedbackServiceModel", Name="Site")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Site : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Site object.
        /// </summary>
        /// <param name="siteId">Initial value of the SiteId property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        public static Site CreateSite(global::System.Guid siteId, global::System.String url, global::System.Guid clientId)
        {
            Site site = new Site();
            site.SiteId = siteId;
            site.Url = url;
            site.ClientId = clientId;
            return site;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SiteId
        {
            get
            {
                return _SiteId;
            }
            set
            {
                if (_SiteId != value)
                {
                    OnSiteIdChanging(value);
                    ReportPropertyChanging("SiteId");
                    _SiteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SiteId");
                    OnSiteIdChanged();
                }
            }
        }
        private global::System.Guid _SiteId;
        partial void OnSiteIdChanging(global::System.Guid value);
        partial void OnSiteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FeedbackServiceModel", "FK_Sites_Sites", "Clients")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("FeedbackServiceModel.FK_Sites_Sites", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("FeedbackServiceModel.FK_Sites_Sites", "Clients").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("FeedbackServiceModel.FK_Sites_Sites", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("FeedbackServiceModel.FK_Sites_Sites", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FeedbackServiceModel", "FK_Feedbacks_Feedbacks", "Feedbacks")]
        public EntityCollection<Feedback> Feedbacks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Feedback>("FeedbackServiceModel.FK_Feedbacks_Feedbacks", "Feedbacks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Feedback>("FeedbackServiceModel.FK_Feedbacks_Feedbacks", "Feedbacks", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
